node {
    def mavenHome = tool name: 'Maven-3.9.10', type: 'maven'

    try{

    
    stage("Git Clone") {
        sh "echo Git Clone"
        git branch: 'development', credentialsId: 'GitHubCred', url: 'https://github.com/Supriya-lr/student-reg-webapp.git'
    }
    
    stage("Maven Verify and Sonar Scan") {
        sh "${mavenHome}/bin/mvn clean package"
        sh "${mavenHome}/bin/mvn clean verify sonar:sonar"
    }
    
     stage("Maven Build") {
        sh "${mavenHome}/bin/mvn clean deploy"
    }
    
    stage("Stop Tomcat Process"){
        sshagent(['TomcatServer']){
            sh """echo Stopping Tomcat Process
                  ssh -o StrictHostKeyChecking=no ec2-user@172.31.82.141 sudo systemctl stop tomcat
                  sleep 10"""
        }
    }
    
    stage("Deploy WAR File to Tomcat"){
        sshagent(['TomcatServer']) {
            sh "scp -o StrictHostKeyChecking=no target/student-reg-webapp.war ec2-user@172.31.82.141:/opt/tomcat/webapps/student-reg-webapp.war"
        }    
    }
    
    stage("Start Tomcat Process"){
        sshagent(['TomcatServer']){
            sh """echo Starting Tomcat Process
                  ssh -o StrictHostKeyChecking=no ec2-user@172.31.82.141 sudo systemctl start tomcat"""
        }
    }
}    catch (err) {
         echo "An error occured: ${e.getMessage()}"
         currentBuild.result = 'FAILURE'
     } finally {
          def buildStatus = currentBuild.result ?: 'SUCCESS'
          sendEmail(
              "${env.JOB_NAME} - ${env.BUILD_NUMBER} - Build ${buildStatus}",
              "Build ${buildStatus}. Please check the console output at ${env.BUILD_URL}",
               'supriya.lr23@gmail.com' )
    }
}

def sendEmail(String subject, String body, String recipient) {
    emailext(
        subject: subject,
        body: body,
        to: recipient,
        mimeType: 'text/html'
    )
}
